version: "3"

services:
  postgres:
    image: postgres:13.5
    container_name: postgres
    restart: always
    networks:
      - default
    ports:
      - 5432:5432
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=aianimals
      - POSTGRES_INITDB_ARGS="--encoding=UTF-8"
    hostname: postgres
    stdin_open: true

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379

  data_registry:
    container_name: data_registry
    image: shibui/building-ml-system:ai_animals_data_registry_0.0.0
    restart: "no"
    networks:
      - default
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=aianimals
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - LOG_LEVEL=INFO
      - RUN_ENVIRONMENT=local
      - DATA_DIRECTORY=/opt/dataset
    command: >
      /bin/sh -c "sleep 5s && python -m src.main"
    depends_on:
      - postgres
      - redis

  backend:
    container_name: backend
    image: shibui/building-ml-system:ai_animals_backend_0.0.0
    restart: always
    networks:
      - default
    ports:
      - 8000:8000
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=aianimals
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - LOG_LEVEL=INFO
      - RUN_ENVIRONMENT=local
      - DATA_DIRECTORY=/opt/dataset
      - WORKERS=1
      - INITIALIZE=1
      - PORT=8000
    command: ./run.sh
    hostname: backend
    depends_on:
      - postgres
      - redis

  es:
    container_name: es
    image: shibui/building-ml-system:ai_animals_elasticsearch_0.0.0
    volumes:
      - ./infrastructure/local_conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    restart: always
    networks:
      - default
    ports:
      - 127.0.0.1:9200:9200
      - 127.0.0.1:9201:9201
      - 127.0.0.1:9300:9300
    environment:
      - discovery.type=single-node
    hostname: es
    depends_on:
      - postgres

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.0
    restart: always
    networks:
      - default
    ports:
      - 127.0.0.1:5601:5601
    environment:
      - ELASTICSEARCH_HOSTS="http://es:9200"
    hostname: kibana
    depends_on:
      - postgres

  gate_keeper_animal_to_search:
    container_name: gate_keeper_animal_to_search
    image: shibui/building-ml-system:ai_animals_gate_keeper_0.0.0
    restart: always
    networks:
      - default
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=aianimals
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - ES_HOST=es
      - ES_SCHEMA=http
      - ES_PORT=9200
      - LOG_LEVEL=INFO
      - RUN_ENVIRONMENT=local
      - DATA_DIRECTORY=/opt/dataset
    command: >
      /bin/sh -c "sleep 20s && python -m src.main --job animal_to_search_job"
    depends_on:
      - postgres
      - redis
      - backend
      - es

networks:
  default:
    name: aianimals
